<?xml version="1.0"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- Launch Empty World -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/empty.world"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Load the URDF description into the ROS Parameter Server -->
  <param name="robot_description_xray_source" 
         command="$(find xacro)/xacro '$(find ranger_mini_v2_gazebo)/xacro/ranger_mini_xray_source.xacro'" />
  
  <!-- Set the global robot_description parameter for compatibility -->
  <param name="robot_description" 
         command="$(find xacro)/xacro '$(find ranger_mini_v2_gazebo)/xacro/ranger_mini_xray_source.xacro'" />

  <!-- Spawn X-ray Source Robot -->
  <node name="spawn_xray_source" pkg="gazebo_ros" type="spawn_model" 
        args="-urdf -param robot_description_xray_source -model xray_source_robot -x 0 -y 0 -z 0.4 -R 0.0 -P 0.0 -Y 0.0"
        output="screen" />

  <!-- Load and start the controllers -->
  <rosparam file="$(find ranger_mini_control)/config/controller_v2.yaml" command="load" ns="xray_source"/>
  <rosparam file="$(find ranger_mini_control)/config/pid_gains_xray_source.yaml" command="load"/>
  
  <!-- Set robot description in the xray_source namespace for the controller -->
  <param name="xray_source/robot_description" 
         command="$(find xacro)/xacro '$(find ranger_mini_v2_gazebo)/xacro/ranger_mini_xray_source.xacro'" />
  
  <node name="controller_spawner" pkg="controller_manager" type="spawner" 
        args="joint_state_controller four_wheel_steering_controller" ns="xray_source" output="screen" />
  
  <node name="robot_state_publisher" 
        pkg="robot_state_publisher" 
        type="robot_state_publisher">
    <remap from="joint_states" to="xray_source/joint_states"/>
  </node>

  <!-- Static transform from map to base_link -->
  <node name="static_transform_publisher" pkg="tf" type="static_transform_publisher"
        args="0 0 0 0 0 0 map base_link 100" />

  <!-- Launch Simple Keyboard Teleop -->
  <node pkg="se2_control" type="xray_source_simple_teleop.py" name="xray_source_simple_teleop" output="screen"/>

  <!-- Launch RViz for X-ray Source Robot -->
  <node name="rviz_xray_source" pkg="rviz" type="rviz"
        args="-d $(find ranger_mini_v2_gazebo)/rviz/xray_source_robot.rviz" />

</launch> 